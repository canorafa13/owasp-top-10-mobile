version: '3.1'

services:
  api-secure:
    container_name: backend_app_owasp_demo_api_secure
    image: backend_app_owasp_demo_api_secure
    build: ./api-secure
    command: npm run start
    env_file: .env
    restart: always
    ports:
    - "${PORT_HTTPS}:${PORT_HTTPS}"
    - "${PORT_HTTP}:${PORT_HTTP}"
#  api-insecure:
#    container_name: backend_app_owasp_demo_api_insecure
#    image: backend_app_owasp_demo_api_insecure
#    build: ./api-insecure
#    command: npm run start
#    env_file: .env
#    restart: always
#    ports:
#    - "${PORT_HTTP}:${PORT_HTTP}"
#  api-mallware:
#    container_name: backend_app_owasp_demo_api_mallware
#    image: backend_app_owasp_demo_api_mallware
#    build: ./api-mallware
#    command: npm run start
#    env_file: .env
#    restart: always
#    ports:
#    - "${PORT_MALLWARE}:${PORT_MALLWARE}"
  users:
    container_name: backend_app_owasp_demo_users
    image: backend_app_owasp_demo_users
    build: ./users
    command: npm run start
    env_file: .env
  catalogs:
    container_name: backend_app_owasp_demo_catalogs
    image: backend_app_owasp_demo_catalogs
    build: ./catalogs
    command: npm run start
    env_file: .env
  sessions:
    container_name: backend_app_owasp_demo_sessions
    image: backend_app_owasp_demo_sessions
    build: ./sessions
    command: npm run start
    env_file: .env
  db:
    container_name: db_owasp_demo
    image: db_owasp_demo
    build: ./database
    env_file: .env
    volumes:
      - data:/var/lib/mysql

volumes:
  data:
    driver: "local"
